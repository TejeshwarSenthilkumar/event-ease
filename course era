@page "/eventease"
@using System.ComponentModel.DataAnnotations

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>EventEase Registration</title>
    <base href="~/" />

    <!-- Bootstrap for styling -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">ðŸŽ‰ Welcome to EventEase</h1>

        @if (!IsRegistered)
        {
            <h3>Register for Event @EventId</h3>
            <EditForm Model="Registration" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Name</label>
                    <InputText @bind-Value="Registration.Name" class="form-control" />
                    <ValidationMessage For="@(() => Registration.Name)" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <InputText @bind-Value="Registration.Email" class="form-control" />
                    <ValidationMessage For="@(() => Registration.Email)" />
                </div>

                <button type="submit" class="btn btn-primary">Register</button>
            </EditForm>
        }
        else
        {
            <div class="alert alert-success mt-4">
                âœ… Registered as <strong>@UserSession.Name</strong> (<em>@UserSession.Email</em>) for event <b>@EventId</b>
            </div>

            <h4>ðŸ“‹ Attendees</h4>
            @if (Attendees.Any())
            {
                <ul class="list-group">
                    @foreach (var email in Attendees)
                    {
                        <li class="list-group-item">@email</li>
                    }
                </ul>
            }
            else
            {
                <p>No attendees yet.</p>
            }

            <button class="btn btn-secondary mt-3" @onclick="Reset">ðŸ”„ Register another</button>
        }
    </div>

    <script src="_framework/blazor.server.js"></script>
</body>
</html>

@code {
    private int EventId = 101;

    private RegistrationForm Registration = new();

    private List<string> Attendees = new();

    private UserSession UserSession = new();

    private bool IsRegistered => UserSession.IsRegistered;

    private void HandleSubmit()
    {
        UserSession.Register(Registration.Name, Registration.Email);
        if (!Attendees.Contains(Registration.Email, StringComparer.OrdinalIgnoreCase))
        {
            Attendees.Add(Registration.Email);
        }
    }

    private void Reset()
    {
        Registration = new();
        UserSession.Logout();
    }

    public class RegistrationForm
    {
        [Required(ErrorMessage = "Name is required")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; } = string.Empty;
    }

    public class UserSession
    {
        public string? Name { get; private set; }
        public string? Email { get; private set; }
        public bool IsRegistered { get; private set; }

        public void Register(string name, string email)
        {
            Name = name;
            Email = email;
            IsRegistered = true;
        }

        public void Logout()
        {
            Name = null;
            Email = null;
            IsRegistered = false;
        }
    }
}
